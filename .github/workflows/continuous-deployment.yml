name: Test
on:
  push:
  workflow_dispatch:

jobs:
  lint-python:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install pipenv
        run: pipx install pipenv
        shell: bash

      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'
          cache: 'pipenv'

      - id: pipenv-install
        name: Install Python dependencies
        run: pipenv install --dev --python `which python`
        shell: bash

      - id: run
        name: Run
        run: pipenv run flake8 archiveis
        shell: bash

  test-python:
    strategy:
      matrix:
        python: ['3.7', '3.8', '3.9', '3.10']
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install pipenv
        run: pipx install pipenv
        shell: bash

      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
          cache: 'pipenv'

      - id: pipenv-install
        name: Install Python dependencies
        run: pipenv install --python ${{ matrix.python }} --skip-lock
        shell: bash

      - id: run
        name: Run
        run: pipenv run python test.py
        shell: bash

  test-build:
    name: Build Python package
    runs-on: ubuntu-latest
    needs: [test-python]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install pipenv
        run: pipx install pipenv

      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'
          cache: 'pipenv'

      - id: pipenv-install
        name: Install Python dependencies
        run: pipenv install --dev --python `which python`
        shell: bash

      - id: build
        name: Build release
        run: |
            pipenv run python setup.py sdist
            pipenv run python setup.py bdist_wheel
            ls -l dist
        shell: bash

      - id: check
        name: Check release
        run: pipenv run twine check dist/*
        shell: bash

      - id: save
        name: Save artifact
        uses: actions/upload-artifact@v2
        with:
          name: test-release-${{ github.run_number }}
          path: ./dist
          if-no-files-found: error

  tag-release:
    name: Tagged PyPI release
    runs-on: ubuntu-latest
    needs: [test-build]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - id: fetch
        name: Fetch artifact
        uses: actions/download-artifact@v4.1.7
        with:
          name: test-release-${{ github.run_number }}
          path: ./dist

      - id: publish
        name: Publish release
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          verbose: true
          verify_metadata: false
